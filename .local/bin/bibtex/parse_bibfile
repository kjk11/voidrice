#!/bin/bash

# This Script parses .bib files imported from Zotero into its individual entries and creates files for them
# Add an option to add a list of tags to all the imported books
# Add two different folders in the ~/Documents directory for PDFS and Citations
# $1 .bib file to be parsed

cd "$HOME/Documents"

while getopts t: opt; do
case "$opt" in
	t) tag="$OPTARG";;
esac
done

# First introduce a string separated by $
sepstring="$(sed -e 's/@/$\n@/' -e "/^$/d" "$HOME/Documents/My Library.bib")"

# This pipe stream gets the number of bibtex entries in the file
# It first prints the number of entries using awk and tail
number="$(echo "$sepstring" | awk '{print NR}' RS='$' | tail -1)"
number=$(echo "$number+1" | bc)

# Loop over the number of entries;

for ((i=2; i<$number; ++i));
do

	# This pipe stream uses awk to select the nth entry and deletes empty lines with sed
	entry="$(echo "$sepstring" | awk "NR!=$i{next}1" RS='$' | sed "/^$/d")"
	oldkey="$(extract_key "$entry")"
	oldpath="$(echo "$entry" | sed -e '/file =/!d' -e 's/.*\(\/home.*\.pdf\):.*/\1/')"
	oldname="$(echo "$oldpath" | sed 's/.*\///')"
	newkey="$(pdftotext -q """$oldpath""" - | tr -d " \n" | sed '/^$/d' | md5sum | sed 's/-//g' | tr -d " ")"
	echo "$newkey"

	# It also runs the reformatting script
	entry="$(reformat -b "$entry")"

	# What if the generated key is empty?
	[ $newkey == d784fa8b6d98d27699781bd9a7cf19f0 ] && echo "Generated Key is Empty. Check the following file: """$oldpath"""" && echo "Continue execution? (y/n)" && read response && [ "$response" == "y" ] && newkey="$(pdftotext -q """$oldpath""" - | tr -d " \n" | sed '/^$/d' | md5sum | sed 's/-//g' | tr -d " ")"
	# If new key is still empty exit the script
	[ $newkey == d784fa8b6d98d27699781bd9a7cf19f0 ] && exit 1

	# Change this to a cp command if you don't want to remove the files from Zotero
	[ -f "pdf/$newkey.pdf" ] && continue || cp """$oldpath""" "pdf"
	mv -n """pdf/$oldname""" "pdf/$newkey.pdf"

	# Change key and tags
	entry="$(echo "$entry" | sed "s/$oldkey/$newkey/" | xargs -0 -I {} change_field -f file -s "$newkey.pdf^" -b {} )"
	entry="$(add_tag -s "$tag" -b "$entry")"

	# Add entry to new file in .bib folder
	# Add entry to bibfile
	echo "$entry" >> "bib/$newkey.bib"
	echo "$entry" >> "bibfile.bib"
	mkdir "txt/$newkey"

	# Create txt files
	pp="$(pdfinfo "pdf/$newkey.pdf" | grep "Pages" | awk '{print $2}')"
	pp=$(echo $pp+1 | bc)
	for ((j=1; j<$pp; ++j));
	do
	five_digit_page="$(printf "%05d\n" "$j")"
	pdftotext -q -layout -f "$j" -l "$j" "pdf/$newkey.pdf" "txt/$newkey/$five_digit_page.txt"
	sed -i "1i \@$newkey\^" "txt/$newkey/${five_digit_page}.txt"
	done

done

# Remove the original files and the zotero database:

# rm "$HOME/Documents/My Library.bib"
# rm "$HOME/Zotero/zotero.sqlite"
