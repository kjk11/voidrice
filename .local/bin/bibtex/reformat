#!/bin/bash
# THINGS TO IMPROVE
# Maybe ensure that the type of publication is capitalised
# Remove nested curly brackets, they tend to cause problems with some scripts!

ref()
{
[ -f "$1" ] && input="$(cat $1)" || input="$1"

# The awk command removes whitespace at the beginning of lines
# The sed command removes empty lines
preformat="$(echo "$input" | awk '{$1=$1;print}' | sed '/^$/d')"

while [ ! -z "$(echo "$preformat" | grep -vnP "(.*= {)|(^}$)|(@)" -m 1)" ];
do
hit=$(echo "$preformat" | grep -vnP "(.*= {)|(^}$)|(@)" -m 1)
num="$(echo "$hit" | sed 's/:.*//')"
lin="$(echo "$hit" | grep -oP "(?<=:).*")"
lin=""$(echo "$preformat" | sed ""$(($num-1))"q;d")" "$lin""
preformat="$(echo "$preformat" | sed "$(($num-1)) s/.*/$lin/" | sed ""$num"d")"
done

# Now remove nested brackets
# Separate out contents of each entry and remove curly brackets
fields="$(echo "$preformat" | grep "=" | sed 's/\=.*//')"
contents="$(echo "$fields" | xargs -I % extract_field "%" "$preformat" | tr -d "{}")"

# Substitute the entries back in
for number in $(seq 1 $(echo "$fields" | wc -l))
do
	preformat="$(change_field -f "$(echo "$fields" | head -"$number" | tail -1)" -s "$(echo "$contents" | head -"$number" | tail -1 )" -b "$preformat")"
done

echo "$preformat"
}

while getopts ib: opt; do
case "$opt" in
	i) change=1;;
	b) bibtex="$OPTARG";;
esac
done

[ "$change" == 1 ] && [ -f "$bibtex" ] && echo "$(ref "$bibtex")" > "$bibtex" || ref "$bibtex"
